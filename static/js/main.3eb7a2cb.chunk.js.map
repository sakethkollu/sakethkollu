{"version":3,"sources":["components/headerComponent/title.js","components/headerComponent/header.js","components/footerComponent/footer.js","components/pages/homePage.js","components/pages/projectsPage.js","components/pages/contactPage.js","App.js","serviceWorker.js","index.js"],"names":["Title","className","this","props","title","Component","Header","Nav","justify","variant","defaultActiveKey","Item","Link","href","disabled","Footer","Homepage","Projectspage","Contactpage","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8RAYeA,E,uKARP,OACM,yBAAKC,UAAU,SACdC,KAAKC,MAAMC,W,GAJNC,aCqELC,E,uKAzDP,OACI,gCACI,yBAAKL,UAAU,QAAf,QAGA,kBAAC,EAAD,CAAOG,MAAM,iBAGT,kBAACG,EAAA,EAAD,CAAKN,UAAY,SAASO,SAAO,EAACC,QAAQ,OAAOC,iBAAiB,KAE9D,kBAACH,EAAA,EAAII,KAAL,CAAUV,UAAY,WAClB,kBAACM,EAAA,EAAIK,KAAL,CAAUC,KAAK,MAAf,SAGJ,kBAACN,EAAA,EAAII,KAAL,CAAUV,UAAY,WAClB,kBAACM,EAAA,EAAIK,KAAL,CAAUC,KAAK,cAAf,aAGJ,kBAACN,EAAA,EAAII,KAAL,CAAUV,UAAY,WAClB,kBAACM,EAAA,EAAIK,KAAL,CAAUC,KAAK,aAAf,YAGJ,kBAACN,EAAA,EAAII,KAAL,CAAUV,UAAY,UAAUa,UAAQ,GACpC,kBAACP,EAAA,EAAIK,KAAL,CAAUC,KAAK,OAAf,MAGJ,kBAACN,EAAA,EAAII,KAAL,CAAUV,UAAY,UAAUa,UAAQ,GACpC,kBAACP,EAAA,EAAIK,KAAL,CAAUC,KAAK,OAAf,MAGJ,kBAACN,EAAA,EAAII,KAAL,CAAUV,UAAY,UAAUa,UAAQ,GACpC,kBAACP,EAAA,EAAIK,KAAL,CAAUC,KAAK,OAAf,MAGJ,kBAACN,EAAA,EAAII,KAAL,CAAUV,UAAY,WAClB,kBAACM,EAAA,EAAIK,KAAL,CAAUC,KAAK,kCAAf,WAGJ,kBAACN,EAAA,EAAII,KAAL,CAAUV,UAAY,WAClB,kBAACM,EAAA,EAAIK,KAAL,CAAUC,KAAK,4CAAf,aAGJ,kBAACN,EAAA,EAAII,KAAL,CAAUV,UAAY,UAAUa,UAAQ,GACpC,kBAACP,EAAA,EAAIK,KAAL,CAAUC,KAAK,iBAAf,uB,GA9CPR,aCCNU,E,uKART,OACE,8C,GAHaV,aCeNW,E,uKAbT,OACE,yBAAKf,UAAY,QAEb,yBAAKA,UAAY,SACZC,KAAKC,MAAMC,Y,GANLC,aCeRY,E,uKAbT,OACE,yBAAKhB,UAAY,QAEb,yBAAKA,UAAY,SACZC,KAAKC,MAAMC,Y,GANDC,aCeZa,E,uKAbT,OACE,yBAAKjB,UAAY,QAEb,yBAAKA,UAAY,SACZC,KAAKC,MAAMC,Y,GANFC,aCuCXc,G,6KArBX,OACE,kBAAC,IAAD,KACA,yBAAKlB,UAAU,OAEb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,UACb,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAO,IAAIC,OAAW,SAACnB,GAAD,OAAW,kBAAC,EAAD,CAAUC,MAAQ,6BAChE,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAO,YAAYC,OAAW,SAACnB,GAAD,OAAW,kBAAC,EAAD,CAAUC,MAAQ,gBACxE,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAO,WAAWC,OAAW,SAACnB,GAAD,OAAW,kBAAC,EAAD,CAASC,MAAQ,gBAGxE,kBAAC,EAAD,Y,GAdUC,cCNEkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3eb7a2cb.chunk.js","sourcesContent":["import React , {Component}from 'react';\r\n\r\nclass Title extends Component {\r\n    render() {\r\n        return (\r\n              <div className=\"title\" >\r\n              {this.props.title}\r\n              </div>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Link,\r\n    NavLink\r\n} from 'react-router-dom';\r\n\r\nimport { Button, Nav} from 'react-bootstrap';\r\n\r\nimport Title from './title';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"logo\">\r\n                    LOGO\r\n            </div>\r\n                <Title title=\"Saketh Kollu\" />\r\n                \r\n                \r\n                    <Nav className = \"navBox\" justify variant=\"tabs\" defaultActiveKey=\"/\">\r\n                        \r\n                        <Nav.Item className = \"navItem\">\r\n                            <Nav.Link href=\"#/\">Home</Nav.Link>\r\n                        </Nav.Item>\r\n\r\n                        <Nav.Item className = \"navItem\">\r\n                            <Nav.Link href=\"#/Projects\">Projects</Nav.Link>\r\n                        </Nav.Item>\r\n\r\n                        <Nav.Item className = \"navItem\">\r\n                            <Nav.Link href=\"#/Contact\">Contact</Nav.Link>\r\n                        </Nav.Item>\r\n\r\n                        <Nav.Item className = \"navItem\" disabled>\r\n                            <Nav.Link href=\"#/1\">1</Nav.Link>\r\n                        </Nav.Item>\r\n\r\n                        <Nav.Item className = \"navItem\" disabled>\r\n                            <Nav.Link href=\"#/2\">2</Nav.Link>\r\n                        </Nav.Item>\r\n\r\n                        <Nav.Item className = \"navItem\" disabled>\r\n                            <Nav.Link href=\"#/3\">3</Nav.Link>\r\n                        </Nav.Item>\r\n\r\n                        <Nav.Item className = \"navItem\">\r\n                            <Nav.Link href=\"https://github.com/sakethkollu\">Github</Nav.Link>\r\n                        </Nav.Item>\r\n\r\n                        <Nav.Item className = \"navItem\">\r\n                            <Nav.Link href=\"https://www.linkedin.com/in/sakethkollu/\">Linkedin</Nav.Link>\r\n                        </Nav.Item>\r\n\r\n                        <Nav.Item className = \"navItem\" disabled>\r\n                            <Nav.Link href=\"#/SocialMedia\">Social Media</Nav.Link>\r\n                        </Nav.Item>\r\n\r\n                    </Nav>\r\n                \r\n               \r\n\r\n\r\n               \r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React , {Component}from 'react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n      return (\r\n        <footer>\r\n            Footer\r\n        </footer>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React , {Component}from 'react';\r\n\r\nclass Homepage extends Component {\r\n  render() {\r\n      return (\r\n        <div className = 'page'>\r\n            \r\n            <div className = \"title\">\r\n                {this.props.title}\r\n            </div>\r\n            \r\n\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Homepage;\r\n","import React , {Component}from 'react';\r\n\r\nclass Projectspage extends Component {\r\n  render() {\r\n      return (\r\n        <div className = 'page'>\r\n            \r\n            <div className = \"title\">\r\n                {this.props.title}\r\n            </div>\r\n            \r\n\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Projectspage;","import React , {Component}from 'react';\r\n\r\nclass Contactpage extends Component {\r\n  render() {\r\n      return (\r\n        <div className = 'page'>\r\n            \r\n            <div className = \"title\">\r\n                {this.props.title}\r\n            </div>\r\n            \r\n\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Contactpage;","import React , {Component}from 'react';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\n//Components\r\n\r\nimport Header from './components/headerComponent/header'\r\nimport Footer from './components/footerComponent/footer'\r\nimport Homepage from './components/pages/homePage'\r\nimport Projects from './components/pages/projectsPage'\r\nimport Contact from './components/pages/contactPage'\r\n\r\n//CSS\r\nimport './Assets/css/default.min.css'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n      <div className=\"App\">\r\n    \r\n        <Header />\r\n\r\n        <div className=\"canvas\">\r\n          <Route exact path = '/' render = { (props) => <Homepage title = \"Welcome to my website\"/>}/>\r\n          <Route exact path = '/Projects' render = { (props) => <Projects title = \"Projects\"/>}/>\r\n          <Route exact path = '/Contact' render = { (props) => <Contact title = \"Contact\"/>}/>\r\n        </div>\r\n\r\n        <Footer />\r\n        \r\n  \r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}